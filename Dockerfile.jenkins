FROM jenkins/jenkins:lts

USER root

# Install Docker
RUN apt-get update && \
    apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg2 \
    software-properties-common && \
    install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli

# Install Python and required packages
RUN apt-get install -y python3-full python3-pip python3-venv

# Set up Python virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install required Python packages in virtual environment
RUN pip install --no-cache-dir \
    pandas \
    scikit-learn \
    python-dotenv \
    apache-airflow \
    snowflake-connector-python

# Create Jenkins workspace
RUN mkdir -p /var/jenkins_home/workspace
RUN chown -R jenkins:jenkins /var/jenkins_home/workspace

USER jenkins

# Skip initial setup wizard
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false

# Install Jenkins plugins with dependencies
RUN jenkins-plugin-cli --plugins \
    git:latest \
    workflow-aggregator:latest \
    docker-workflow:latest \
    pipeline-stage-view:latest \
    pipeline-utility-steps:latest \
    credentials-binding:latest \
    configuration-as-code:latest \
    blueocean:latest \
    docker-plugin:latest \
    python:latest
